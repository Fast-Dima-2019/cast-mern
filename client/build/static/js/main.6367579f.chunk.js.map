{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.jsx","components/Loader.jsx","components/DevicesList.jsx","pages/DevicePage.jsx","pages/CreatePage.jsx","components/DeviceCard.jsx","pages/DetailPage.jsx","pages/AuthPage.jsx","hooks/msg.hook.js","components/Navbar.jsx","App.jsx","hooks/auth.hook.js","Routes.jsx","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","res","json","data","ok","Error","msg","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","props","style","display","justifyContent","paddingTop","className","DevicesList","devices","length","map","device","index","key","id","name","to","DevicePage","useContext","setDevices","getDevices","Authorization","fetched","useEffect","CreatePage","auth","history","useHistory","devName","setDevName","description","setDescription","window","M","updateTextFields","pressHandler","event","push","placeholder","type","value","onChange","e","target","htmlFor","onKeyPress","DeviceCard","strBody","height","readOnly","resize","user","email","DetailPage","setDevice","deviceId","useParams","getDevice","AuthPage","text","toast","html","password","form","setForm","changeHandler","registerHandler","loginHandler","marginRight","onClick","disabled","Navbar","padding","href","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6367579f.chunk.js","sourcesContent":["import {useCallback, useState} from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const request = useCallback(\r\n      async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n          if (body) {\r\n            body = JSON.stringify(body)\r\n            headers['Content-Type']='application/json'\r\n          }\r\n          const res = await fetch(url, {method, body, headers})\r\n          const data = await res.json()\r\n          if (!res.ok) {\r\n            throw new Error(data.msg || 'Что-то пошло не так...')\r\n          }\r\n          setLoading(false)\r\n\r\n          return data\r\n\r\n        } catch (err) {\r\n          setLoading(false)\r\n          setError(err)\r\n          throw err\r\n        }\r\n      }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), [])\r\n\r\n  return {loading, request, error, clearError}\r\n}","import {createContext} from 'react'\r\n\r\nfunction noop() {} // Пустая функция - ничего не делает.\r\n\r\nexport const AuthContext = createContext({\r\n  token:null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false,\r\n})\r\n","import React from 'react'\r\n\r\nexport const Loader = (props) => {\r\n\r\n  return <>\r\n    <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n      <div className=\"preloader-wrapper active\">\r\n        <div className=\"spinner-layer spinner-blue-only\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"/>\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\"/>\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const DevicesList = ({devices}) => {\r\n\r\n  if (!devices.length) {\r\n    return <p className='center'>Устройств нет</p>\r\n  }\r\n\r\n  return <>\r\n    <table className=\"highlight\">\r\n      <thead>\r\n      <tr>\r\n        <th>№</th>\r\n        <th>Наименование</th>\r\n        <th>Токен</th>\r\n        <th>Открыть</th>\r\n        {/*<th>Удалить</th>*/}\r\n      </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      {devices.map((device, index) => {\r\n        return (\r\n            <tr key={device.id}>\r\n              <td>{index + 1}</td>\r\n              <td>{device.name}</td>\r\n              <td>{device.id}</td>\r\n              <td><Link to={`/detail/${device.id}`}>Открыть</Link></td>\r\n              {/*<td><Link to={`/detail/${device.id}`}>Удалить</Link></td>*/}\r\n            </tr>\r\n        )\r\n      })}\r\n      </tbody>\r\n    </table>\r\n  </>\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { Loader } from '../components/Loader'\r\nimport { DevicesList } from '../components/DevicesList'\r\n\r\nexport const DevicePage = (props) => {\r\n  const {token} = useContext(AuthContext)\r\n  const [devices, setDevices] = useState([])\r\n  const {loading, request} = useHttp()\r\n\r\n  const getDevices = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/device`, 'GET', null,\r\n          {Authorization: `Bearer ${token}`}\r\n      )\r\n      setDevices(fetched)\r\n    } catch (e) {\r\n    }\r\n  }, [token, request])\r\n\r\n  useEffect(() => {\r\n    getDevices()\r\n  }, [getDevices])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return <>\r\n    {/*<h1>Device Page</h1>*/}\r\n    {!loading && <DevicesList devices={devices}/>}\r\n  </>\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport const CreatePage = (props) => {\r\n  const {request} = useHttp()\r\n  const auth = useContext(AuthContext)\r\n  const history = useHistory()\r\n  const [devName, setDevName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const pressHandler = async event => {\r\n    if (event.key === 'Enter') {\r\n      try {\r\n        const data = await request('/api/device/generate', 'POST',\r\n            {name: devName, description: description},\r\n            {Authorization: `Bearer ${auth.token}`}\r\n        )\r\n        // console.log('out', data)\r\n        history.push(`/detail/${data.id}`)\r\n      } catch (e) {\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <h1>Create Page</h1>\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n        <div className=\"input-field\">\r\n          <input\r\n              placeholder=\"Укажите имя устройства\"\r\n              id=\"name\" name=\"devName\"\r\n              type=\"text\"\r\n              value={devName}\r\n              onChange={e => setDevName(e.target.value)}\r\n          />\r\n          <label htmlFor=\"name\">Name</label>\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <input\r\n              placeholder=\"Укажите описание\"\r\n              id=\"description\" name=\"description\"\r\n              type=\"text\"\r\n              value={description}\r\n              onChange={e => setDescription(e.target.value)}\r\n              onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"description\">Name</label>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React from 'react'\r\n\r\nexport const DeviceCard = ({device}) => {\r\n\r\n  const strBody = `{\\n\"token\": \"${device.id}\",\\n\"code\": ${device.userId}\\n}`\r\n  // console.log(device)\r\n\r\n  return <>\r\n    <h3>Устройство</h3>\r\n\r\n    <p>Name: {device.name}</p>\r\n    <p>Описание: {device.description}</p>\r\n    <p>Token: {device.id}</p>\r\n\r\n    {/*<p>Client: {link.devices.id_client}</p>*/}\r\n    {/*<p>Metrics: {link.devices.metrics}</p>*/}\r\n    <br/>\r\n    <span>body -> for request</span>\r\n    <div className=\"row\">\r\n      <form className=\"col s12\">\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s12\" style={{height: '200px'}}>\r\n            <textarea id=\"textarea\" readOnly style={{resize: 'none'}}\r\n                      value={strBody}/>\r\n            {/*<label htmlFor=\"textarea1\">body for request</label>*/}\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* todo disabled*/}\r\n      <button className=\"btn  waves-effect waves-light\"\r\n              type=\"send\" name=\"action\">Отправить -> ${device.user.email}\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport {Loader} from '../components/Loader';\r\nimport {DeviceCard} from '../components/DeviceCard';\r\n\r\nexport const DetailPage = (props) => {\r\n  const {request, loading} = useHttp()\r\n  const [device, setDevice] = useState(null)\r\n  const {token} = useContext(AuthContext)\r\n  const deviceId = useParams().id\r\n\r\n  const getDevice = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/device/${deviceId}`, 'GET', null,\r\n          {Authorization: `Bearer ${token}`}\r\n      )\r\n      setDevice(fetched)\r\n    } catch (e) {\r\n    }\r\n  }, [token, deviceId, request])\r\n\r\n  useEffect(() => {\r\n    getDevice()\r\n  }, [getDevice])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return <>\r\n    {/*<h1>Detail Page</h1>*/}\r\n    {!loading && device && <DeviceCard device={device}/>}\r\n  </>\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {useMessage} from '../hooks/msg.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nexport const AuthPage = (props) => {\r\n  const auth = useContext(AuthContext)\r\n  const {loading, request, error, clearError} = useHttp()\r\n  const msg = useMessage()\r\n\r\n  const [form, setForm] = useState({\r\n    name: '', email: '', password: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    msg(error)\r\n    clearError()\r\n  }, [error, msg, clearError])\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const changeHandler = event => {\r\n    setForm({...form, [event.target.name]: event.target.value})\r\n  }\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request('/api/auth/register', 'POST', {...form})\r\n      // console.log('Data - register:', data)\r\n      msg(data.msg)\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request('/api/auth/login', 'POST', {...form})\r\n      // console.log('Data - register:', data)\r\n      // msg(data.msg)\r\n      auth.login(data.token, data.userId)\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h3>Мониторинг</h3>\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n\r\n            <div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                    placeholder=\"Введите name\"\r\n                    id=\"name\" name=\"name\"\r\n                    type=\"text\"\r\n                    className=\"yellow-input\"\r\n                    value={form.name}\r\n                    onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"name\">Name</label>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                    placeholder=\"Введите email\"\r\n                    id=\"email\" name=\"email\"\r\n                    type=\"text\"\r\n                    className=\"yellow-input\"\r\n                    value={form.email}\r\n                    onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                    placeholder=\"Введите пароль\"\r\n                    id=\"password\" name=\"password\"\r\n                    type=\"password\"\r\n                    className=\"yellow-input\"\r\n                    value={form.password}\r\n                    onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n                className=\"btn yellow darken-4\"\r\n                style={{marginRight: 10}}\r\n                onClick={loginHandler}\r\n                disabled={loading}\r\n            >Войти\r\n            </button>\r\n            <button\r\n                className=\"btn grey lighten-1 black-text\"\r\n                onClick={registerHandler}\r\n                disabled={loading}\r\n            >Регистрация\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n}\r\n","import {useCallback} from \"react\"\r\n\r\n\r\nexport const useMessage = () => {\r\n  return useCallback(text => {\r\n    if (window.M && text) {\r\n      window.M.toast({html: text})\r\n    }\r\n  }, [])\r\n}","import React, {useContext} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nexport const Navbar = (props) => {\r\n\r\n  const auth = useContext(AuthContext)\r\n  const history = useHistory()\r\n  const logoutHandler = event => {\r\n    event.preventDefault()\r\n    auth.logout()\r\n    history.push('/')\r\n  }\r\n\r\n  return <>\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\" style={{padding: '0 2rem'}}>\r\n        <span className=\"brand-logo\">Мониторинг</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n          <li><NavLink to=\"/device\">Список</NavLink></li>\r\n          <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </>\r\n}\r\n","import React from 'react'\nimport 'materialize-css'\nimport {useRoutes} from './Routes'\nimport {BrowserRouter} from 'react-router-dom'\nimport {useAuth} from './hooks/auth.hook'\nimport {AuthContext} from './context/AuthContext'\nimport {Navbar} from './components/Navbar';\nimport {Loader} from './components/Loader';\n\nfunction App() {\n  const {login, logout, token, userId, ready} = useAuth()\n  const isAuthenticated = !!token // !! Приводит к boolean type\n  const routes = useRoutes(isAuthenticated)\n\n  if (!ready) {\n    return <Loader/>\n  }\n\n  return <>\n    <AuthContext.Provider value={{token, login, logout, userId, isAuthenticated}}>\n      <BrowserRouter>\n        {isAuthenticated && <Navbar/>}\n        <div className='container'>\n          {routes}\n        </div>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  </>\n}\n\nexport default App\n","import {useCallback, useEffect, useState} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null)\r\n  const [ready, setReady] = useState(false)\r\n  const [userId, setUserId] = useState(null)\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n    localStorage.setItem(storageName, JSON.stringify({userId: id, token: jwtToken}))\r\n  }, [])\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n    if (data && data.token) {\r\n      login(data.token, data.userId)\r\n    }\r\n    setReady(true)\r\n  }, [login])\r\n\r\n  return {login, logout, token, userId, ready}\r\n}","import React, {Fragment} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {DevicePage} from './pages/DevicePage'\r\nimport {CreatePage} from './pages/CreatePage'\r\nimport {DetailPage} from './pages/DetailPage'\r\nimport {AuthPage} from './pages/AuthPage'\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n\r\n  if (isAuthenticated) {\r\n    return (\r\n        <Switch>\r\n          <Route path='/device' exact>\r\n            <DevicePage/>\r\n          </Route>\r\n          <Route path='/create' exact>\r\n            <CreatePage/>\r\n          </Route>\r\n          <Route path='/detail/:id'>\r\n            <DetailPage/>\r\n          </Route>\r\n          <Redirect to='/create'/>\r\n        </Switch>\r\n    )\r\n  }\r\n\r\n  return <Fragment>\r\n    <Switch>\r\n      <Route path='/' exact>\r\n        <AuthPage/>\r\n      </Route>\r\n      <Redirect to='/'/>\r\n    </Switch>\r\n  </Fragment>\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}